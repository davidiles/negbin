
    model{
    
    #------------------------------------------------
    #Zero-inflated Negative Binomial
    #------------------------------------------------
    
    #Priors
    r ~ dunif(0,50)
    
    count.intercept ~ dunif(0.001,200)
    count.B0 <- log(count.intercept)
    
    count.B0.offset <- 1 #Note that an offset is a predictor variable with coefficient set to 1
    
    count.B1 ~ dnorm(0,0.01) #assnage
    count.B2 ~ dnorm(0,0.01) #spawncob
    
    count.B3 ~ dnorm(0,0.01) #fdepth60
    count.B4 ~ dnorm(0,0.01) #fdepth90
    count.B5 ~ dnorm(0,0.01) #fdepth120
    
    zero.intercept ~ dunif(0.001,0.999)
    zero.B0 <- log(zero.intercept/(1-zero.intercept))
    
    zero.B1 ~ dnorm(0,0.01) #assnage
    zero.B2 ~ dnorm(0,0.01) #spawncob
    
    zero.B3 ~ dnorm(0,0.01) #fdepth60
    zero.B4 ~ dnorm(0,0.01) #fdepth90
    zero.B5 ~ dnorm(0,0.01) #fdepth120
    
    # Likelihood
    for(i in 1:N){
    
    y[i] ~ dnegbin(p[i],r)
    
    #Count Model
    p[i] <- r/(r+(1-zero[i])*mu.count[i]) - 1e-10*zero[i]
    mu.count[i] <- exp(log.mu.count[i])
    
    log.mu.count[i] <- count.B0 + count.B0.offset*logoffset[i] + count.B1*assnage[i] + count.B2*spawncob[i] + count.B3*fdepth60[i] + count.B4*fdepth90[i] + count.B5*fdepth120[i]
    
    # Zero-Inflation
    zero[i] ~ dbern(prob[i])
    prob[i] <- 1/(1+exp(-logit.prob[i]))
    logit.prob[i] <-  zero.B0 + zero.B1*assnage[i] + zero.B2*spawncob[i] + zero.B3*fdepth60[i] + zero.B4*fdepth90[i] + zero.B5*fdepth120[i]
    
    }
    }
    
